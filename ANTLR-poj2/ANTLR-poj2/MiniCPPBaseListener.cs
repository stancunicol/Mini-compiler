//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MiniCPP.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMiniCPPListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MiniCPPBaseListener : IMiniCPPListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] MiniCPPParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] MiniCPPParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.includeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludeStmt([NotNull] MiniCPPParser.IncludeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.includeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludeStmt([NotNull] MiniCPPParser.IncludeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] MiniCPPParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] MiniCPPParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.funcDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncDecl([NotNull] MiniCPPParser.FuncDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.funcDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncDecl([NotNull] MiniCPPParser.FuncDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] MiniCPPParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] MiniCPPParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] MiniCPPParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] MiniCPPParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.structDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDecl([NotNull] MiniCPPParser.StructDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.structDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDecl([NotNull] MiniCPPParser.StructDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] MiniCPPParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] MiniCPPParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] MiniCPPParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] MiniCPPParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDecl([NotNull] MiniCPPParser.ConstDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDecl([NotNull] MiniCPPParser.ConstDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.constructorDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructorDecl([NotNull] MiniCPPParser.ConstructorDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.constructorDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructorDecl([NotNull] MiniCPPParser.ConstructorDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.destructorDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestructorDecl([NotNull] MiniCPPParser.DestructorDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.destructorDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestructorDecl([NotNull] MiniCPPParser.DestructorDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] MiniCPPParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.funcCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] MiniCPPParser.FuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.controlStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterControlStruct([NotNull] MiniCPPParser.ControlStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.controlStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitControlStruct([NotNull] MiniCPPParser.ControlStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] MiniCPPParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] MiniCPPParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MiniCPPParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MiniCPPParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCPPParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] MiniCPPParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCPPParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] MiniCPPParser.ExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
